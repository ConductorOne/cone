/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiDirectoryV1DirectoryServiceListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiDirectoryV1DirectoryServiceListResponse{}

// C1ApiDirectoryV1DirectoryServiceListResponse The DirectoryServiceListResponse message.
type C1ApiDirectoryV1DirectoryServiceListResponse struct {
	// The expanded field.
	Expanded []C1ApiAppV1AppResourceServiceGetResponseExpandedInner `json:"expanded,omitempty"`
	// The list field.
	List []C1ApiDirectoryV1DirectoryView `json:"list,omitempty"`
	// The nextPageToken field.
	NextPageToken *string `json:"nextPageToken,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiDirectoryV1DirectoryServiceListResponse C1ApiDirectoryV1DirectoryServiceListResponse

// NewC1ApiDirectoryV1DirectoryServiceListResponse instantiates a new C1ApiDirectoryV1DirectoryServiceListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiDirectoryV1DirectoryServiceListResponse() *C1ApiDirectoryV1DirectoryServiceListResponse {
	this := C1ApiDirectoryV1DirectoryServiceListResponse{}
	return &this
}

// NewC1ApiDirectoryV1DirectoryServiceListResponseWithDefaults instantiates a new C1ApiDirectoryV1DirectoryServiceListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiDirectoryV1DirectoryServiceListResponseWithDefaults() *C1ApiDirectoryV1DirectoryServiceListResponse {
	this := C1ApiDirectoryV1DirectoryServiceListResponse{}
	return &this
}

// GetExpanded returns the Expanded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) GetExpanded() []C1ApiAppV1AppResourceServiceGetResponseExpandedInner {
	if o == nil {
		var ret []C1ApiAppV1AppResourceServiceGetResponseExpandedInner
		return ret
	}
	return o.Expanded
}

// GetExpandedOk returns a tuple with the Expanded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) GetExpandedOk() ([]C1ApiAppV1AppResourceServiceGetResponseExpandedInner, bool) {
	if o == nil || IsNil(o.Expanded) {
		return nil, false
	}
	return o.Expanded, true
}

// HasExpanded returns a boolean if a field has been set.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) HasExpanded() bool {
	if o != nil && IsNil(o.Expanded) {
		return true
	}

	return false
}

// SetExpanded gets a reference to the given []C1ApiAppV1AppResourceServiceGetResponseExpandedInner and assigns it to the Expanded field.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) SetExpanded(v []C1ApiAppV1AppResourceServiceGetResponseExpandedInner) {
	o.Expanded = v
}

// GetList returns the List field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) GetList() []C1ApiDirectoryV1DirectoryView {
	if o == nil {
		var ret []C1ApiDirectoryV1DirectoryView
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) GetListOk() ([]C1ApiDirectoryV1DirectoryView, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) HasList() bool {
	if o != nil && IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []C1ApiDirectoryV1DirectoryView and assigns it to the List field.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) SetList(v []C1ApiDirectoryV1DirectoryView) {
	o.List = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) GetNextPageToken() string {
	if o == nil || IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) GetNextPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) HasNextPageToken() bool {
	if o != nil && !IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *C1ApiDirectoryV1DirectoryServiceListResponse) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

func (o C1ApiDirectoryV1DirectoryServiceListResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiDirectoryV1DirectoryServiceListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Expanded != nil {
		toSerialize["expanded"] = o.Expanded
	}
	if o.List != nil {
		toSerialize["list"] = o.List
	}
	if !IsNil(o.NextPageToken) {
		toSerialize["nextPageToken"] = o.NextPageToken
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiDirectoryV1DirectoryServiceListResponse) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiDirectoryV1DirectoryServiceListResponse := _C1ApiDirectoryV1DirectoryServiceListResponse{}

	if err = json.Unmarshal(bytes, &varC1ApiDirectoryV1DirectoryServiceListResponse); err == nil {
		*o = C1ApiDirectoryV1DirectoryServiceListResponse(varC1ApiDirectoryV1DirectoryServiceListResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "expanded")
		delete(additionalProperties, "list")
		delete(additionalProperties, "nextPageToken")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiDirectoryV1DirectoryServiceListResponse struct {
	value *C1ApiDirectoryV1DirectoryServiceListResponse
	isSet bool
}

func (v NullableC1ApiDirectoryV1DirectoryServiceListResponse) Get() *C1ApiDirectoryV1DirectoryServiceListResponse {
	return v.value
}

func (v *NullableC1ApiDirectoryV1DirectoryServiceListResponse) Set(val *C1ApiDirectoryV1DirectoryServiceListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiDirectoryV1DirectoryServiceListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiDirectoryV1DirectoryServiceListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiDirectoryV1DirectoryServiceListResponse(val *C1ApiDirectoryV1DirectoryServiceListResponse) *NullableC1ApiDirectoryV1DirectoryServiceListResponse {
	return &NullableC1ApiDirectoryV1DirectoryServiceListResponse{value: val, isSet: true}
}

func (v NullableC1ApiDirectoryV1DirectoryServiceListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiDirectoryV1DirectoryServiceListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


