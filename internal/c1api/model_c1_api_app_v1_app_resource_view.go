/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiAppV1AppResourceView type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAppV1AppResourceView{}

// C1ApiAppV1AppResourceView The AppResourceView message.
type C1ApiAppV1AppResourceView struct {
	// The appPath field.
	AppPath *string `json:"appPath,omitempty"`
	AppResource *C1ApiAppV1AppResource `json:"appResource,omitempty"`
	// The resourceTypePath field.
	ResourceTypePath *string `json:"resourceTypePath,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAppV1AppResourceView C1ApiAppV1AppResourceView

// NewC1ApiAppV1AppResourceView instantiates a new C1ApiAppV1AppResourceView object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAppV1AppResourceView() *C1ApiAppV1AppResourceView {
	this := C1ApiAppV1AppResourceView{}
	return &this
}

// NewC1ApiAppV1AppResourceViewWithDefaults instantiates a new C1ApiAppV1AppResourceView object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAppV1AppResourceViewWithDefaults() *C1ApiAppV1AppResourceView {
	this := C1ApiAppV1AppResourceView{}
	return &this
}

// GetAppPath returns the AppPath field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResourceView) GetAppPath() string {
	if o == nil || IsNil(o.AppPath) {
		var ret string
		return ret
	}
	return *o.AppPath
}

// GetAppPathOk returns a tuple with the AppPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResourceView) GetAppPathOk() (*string, bool) {
	if o == nil || IsNil(o.AppPath) {
		return nil, false
	}
	return o.AppPath, true
}

// HasAppPath returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceView) HasAppPath() bool {
	if o != nil && !IsNil(o.AppPath) {
		return true
	}

	return false
}

// SetAppPath gets a reference to the given string and assigns it to the AppPath field.
func (o *C1ApiAppV1AppResourceView) SetAppPath(v string) {
	o.AppPath = &v
}

// GetAppResource returns the AppResource field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResourceView) GetAppResource() C1ApiAppV1AppResource {
	if o == nil || IsNil(o.AppResource) {
		var ret C1ApiAppV1AppResource
		return ret
	}
	return *o.AppResource
}

// GetAppResourceOk returns a tuple with the AppResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResourceView) GetAppResourceOk() (*C1ApiAppV1AppResource, bool) {
	if o == nil || IsNil(o.AppResource) {
		return nil, false
	}
	return o.AppResource, true
}

// HasAppResource returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceView) HasAppResource() bool {
	if o != nil && !IsNil(o.AppResource) {
		return true
	}

	return false
}

// SetAppResource gets a reference to the given C1ApiAppV1AppResource and assigns it to the AppResource field.
func (o *C1ApiAppV1AppResourceView) SetAppResource(v C1ApiAppV1AppResource) {
	o.AppResource = &v
}

// GetResourceTypePath returns the ResourceTypePath field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResourceView) GetResourceTypePath() string {
	if o == nil || IsNil(o.ResourceTypePath) {
		var ret string
		return ret
	}
	return *o.ResourceTypePath
}

// GetResourceTypePathOk returns a tuple with the ResourceTypePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResourceView) GetResourceTypePathOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceTypePath) {
		return nil, false
	}
	return o.ResourceTypePath, true
}

// HasResourceTypePath returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceView) HasResourceTypePath() bool {
	if o != nil && !IsNil(o.ResourceTypePath) {
		return true
	}

	return false
}

// SetResourceTypePath gets a reference to the given string and assigns it to the ResourceTypePath field.
func (o *C1ApiAppV1AppResourceView) SetResourceTypePath(v string) {
	o.ResourceTypePath = &v
}

func (o C1ApiAppV1AppResourceView) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAppV1AppResourceView) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppPath) {
		toSerialize["appPath"] = o.AppPath
	}
	if !IsNil(o.AppResource) {
		toSerialize["appResource"] = o.AppResource
	}
	if !IsNil(o.ResourceTypePath) {
		toSerialize["resourceTypePath"] = o.ResourceTypePath
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAppV1AppResourceView) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAppV1AppResourceView := _C1ApiAppV1AppResourceView{}

	if err = json.Unmarshal(bytes, &varC1ApiAppV1AppResourceView); err == nil {
		*o = C1ApiAppV1AppResourceView(varC1ApiAppV1AppResourceView)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appPath")
		delete(additionalProperties, "appResource")
		delete(additionalProperties, "resourceTypePath")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAppV1AppResourceView struct {
	value *C1ApiAppV1AppResourceView
	isSet bool
}

func (v NullableC1ApiAppV1AppResourceView) Get() *C1ApiAppV1AppResourceView {
	return v.value
}

func (v *NullableC1ApiAppV1AppResourceView) Set(val *C1ApiAppV1AppResourceView) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAppV1AppResourceView) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAppV1AppResourceView) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAppV1AppResourceView(val *C1ApiAppV1AppResourceView) *NullableC1ApiAppV1AppResourceView {
	return &NullableC1ApiAppV1AppResourceView{value: val, isSet: true}
}

func (v NullableC1ApiAppV1AppResourceView) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAppV1AppResourceView) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


