/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiPolicyV1AppGroupApproval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiPolicyV1AppGroupApproval{}

// C1ApiPolicyV1AppGroupApproval The AppGroupApproval message.
type C1ApiPolicyV1AppGroupApproval struct {
	// The allowSelfApproval field.
	AllowSelfApproval *bool `json:"allowSelfApproval,omitempty"`
	// The appGroupId field.
	AppGroupId *string `json:"appGroupId,omitempty"`
	// The appId field.
	AppId *string `json:"appId,omitempty"`
	// The fallback field.
	Fallback *bool `json:"fallback,omitempty"`
	// The fallbackUserIds field.
	FallbackUserIds []string `json:"fallbackUserIds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiPolicyV1AppGroupApproval C1ApiPolicyV1AppGroupApproval

// NewC1ApiPolicyV1AppGroupApproval instantiates a new C1ApiPolicyV1AppGroupApproval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiPolicyV1AppGroupApproval() *C1ApiPolicyV1AppGroupApproval {
	this := C1ApiPolicyV1AppGroupApproval{}
	return &this
}

// NewC1ApiPolicyV1AppGroupApprovalWithDefaults instantiates a new C1ApiPolicyV1AppGroupApproval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiPolicyV1AppGroupApprovalWithDefaults() *C1ApiPolicyV1AppGroupApproval {
	this := C1ApiPolicyV1AppGroupApproval{}
	return &this
}

// GetAllowSelfApproval returns the AllowSelfApproval field value if set, zero value otherwise.
func (o *C1ApiPolicyV1AppGroupApproval) GetAllowSelfApproval() bool {
	if o == nil || IsNil(o.AllowSelfApproval) {
		var ret bool
		return ret
	}
	return *o.AllowSelfApproval
}

// GetAllowSelfApprovalOk returns a tuple with the AllowSelfApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1AppGroupApproval) GetAllowSelfApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSelfApproval) {
		return nil, false
	}
	return o.AllowSelfApproval, true
}

// HasAllowSelfApproval returns a boolean if a field has been set.
func (o *C1ApiPolicyV1AppGroupApproval) HasAllowSelfApproval() bool {
	if o != nil && !IsNil(o.AllowSelfApproval) {
		return true
	}

	return false
}

// SetAllowSelfApproval gets a reference to the given bool and assigns it to the AllowSelfApproval field.
func (o *C1ApiPolicyV1AppGroupApproval) SetAllowSelfApproval(v bool) {
	o.AllowSelfApproval = &v
}

// GetAppGroupId returns the AppGroupId field value if set, zero value otherwise.
func (o *C1ApiPolicyV1AppGroupApproval) GetAppGroupId() string {
	if o == nil || IsNil(o.AppGroupId) {
		var ret string
		return ret
	}
	return *o.AppGroupId
}

// GetAppGroupIdOk returns a tuple with the AppGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1AppGroupApproval) GetAppGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppGroupId) {
		return nil, false
	}
	return o.AppGroupId, true
}

// HasAppGroupId returns a boolean if a field has been set.
func (o *C1ApiPolicyV1AppGroupApproval) HasAppGroupId() bool {
	if o != nil && !IsNil(o.AppGroupId) {
		return true
	}

	return false
}

// SetAppGroupId gets a reference to the given string and assigns it to the AppGroupId field.
func (o *C1ApiPolicyV1AppGroupApproval) SetAppGroupId(v string) {
	o.AppGroupId = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *C1ApiPolicyV1AppGroupApproval) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1AppGroupApproval) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *C1ApiPolicyV1AppGroupApproval) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *C1ApiPolicyV1AppGroupApproval) SetAppId(v string) {
	o.AppId = &v
}

// GetFallback returns the Fallback field value if set, zero value otherwise.
func (o *C1ApiPolicyV1AppGroupApproval) GetFallback() bool {
	if o == nil || IsNil(o.Fallback) {
		var ret bool
		return ret
	}
	return *o.Fallback
}

// GetFallbackOk returns a tuple with the Fallback field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1AppGroupApproval) GetFallbackOk() (*bool, bool) {
	if o == nil || IsNil(o.Fallback) {
		return nil, false
	}
	return o.Fallback, true
}

// HasFallback returns a boolean if a field has been set.
func (o *C1ApiPolicyV1AppGroupApproval) HasFallback() bool {
	if o != nil && !IsNil(o.Fallback) {
		return true
	}

	return false
}

// SetFallback gets a reference to the given bool and assigns it to the Fallback field.
func (o *C1ApiPolicyV1AppGroupApproval) SetFallback(v bool) {
	o.Fallback = &v
}

// GetFallbackUserIds returns the FallbackUserIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiPolicyV1AppGroupApproval) GetFallbackUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.FallbackUserIds
}

// GetFallbackUserIdsOk returns a tuple with the FallbackUserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiPolicyV1AppGroupApproval) GetFallbackUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.FallbackUserIds) {
		return nil, false
	}
	return o.FallbackUserIds, true
}

// HasFallbackUserIds returns a boolean if a field has been set.
func (o *C1ApiPolicyV1AppGroupApproval) HasFallbackUserIds() bool {
	if o != nil && IsNil(o.FallbackUserIds) {
		return true
	}

	return false
}

// SetFallbackUserIds gets a reference to the given []string and assigns it to the FallbackUserIds field.
func (o *C1ApiPolicyV1AppGroupApproval) SetFallbackUserIds(v []string) {
	o.FallbackUserIds = v
}

func (o C1ApiPolicyV1AppGroupApproval) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiPolicyV1AppGroupApproval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowSelfApproval) {
		toSerialize["allowSelfApproval"] = o.AllowSelfApproval
	}
	if !IsNil(o.AppGroupId) {
		toSerialize["appGroupId"] = o.AppGroupId
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.Fallback) {
		toSerialize["fallback"] = o.Fallback
	}
	if o.FallbackUserIds != nil {
		toSerialize["fallbackUserIds"] = o.FallbackUserIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiPolicyV1AppGroupApproval) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiPolicyV1AppGroupApproval := _C1ApiPolicyV1AppGroupApproval{}

	if err = json.Unmarshal(bytes, &varC1ApiPolicyV1AppGroupApproval); err == nil {
		*o = C1ApiPolicyV1AppGroupApproval(varC1ApiPolicyV1AppGroupApproval)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "allowSelfApproval")
		delete(additionalProperties, "appGroupId")
		delete(additionalProperties, "appId")
		delete(additionalProperties, "fallback")
		delete(additionalProperties, "fallbackUserIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiPolicyV1AppGroupApproval struct {
	value *C1ApiPolicyV1AppGroupApproval
	isSet bool
}

func (v NullableC1ApiPolicyV1AppGroupApproval) Get() *C1ApiPolicyV1AppGroupApproval {
	return v.value
}

func (v *NullableC1ApiPolicyV1AppGroupApproval) Set(val *C1ApiPolicyV1AppGroupApproval) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiPolicyV1AppGroupApproval) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiPolicyV1AppGroupApproval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiPolicyV1AppGroupApproval(val *C1ApiPolicyV1AppGroupApproval) *NullableC1ApiPolicyV1AppGroupApproval {
	return &NullableC1ApiPolicyV1AppGroupApproval{value: val, isSet: true}
}

func (v NullableC1ApiPolicyV1AppGroupApproval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiPolicyV1AppGroupApproval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


