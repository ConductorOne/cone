/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
	"time"
)

// checks if the C1ApiAppV1App type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAppV1App{}

// C1ApiAppV1App The App message.
type C1ApiAppV1App struct {
	// The appAccountId field.
	AppAccountId *string `json:"appAccountId,omitempty"`
	// The appAccountName field.
	AppAccountName *string `json:"appAccountName,omitempty"`
	// The certifyPolicyId field.
	CertifyPolicyId *string `json:"certifyPolicyId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// The description field.
	Description *string `json:"description,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	FieldMask NullableString `json:"fieldMask,omitempty"`
	// The grantPolicyId field.
	GrantPolicyId *string `json:"grantPolicyId,omitempty"`
	// The iconUrl field.
	IconUrl *string `json:"iconUrl,omitempty"`
	// The id field.
	Id *string `json:"id,omitempty"`
	// The logoUri field.
	LogoUri *string `json:"logoUri,omitempty"`
	// The monthlyCostUsd field.
	MonthlyCostUsd *float32 `json:"monthlyCostUsd,omitempty"`
	// The parentAppId field.
	ParentAppId *string `json:"parentAppId,omitempty"`
	// The revokePolicyId field.
	RevokePolicyId *string `json:"revokePolicyId,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// The userCount field.
	UserCount *string `json:"userCount,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAppV1App C1ApiAppV1App

// NewC1ApiAppV1App instantiates a new C1ApiAppV1App object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAppV1App() *C1ApiAppV1App {
	this := C1ApiAppV1App{}
	return &this
}

// NewC1ApiAppV1AppWithDefaults instantiates a new C1ApiAppV1App object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAppV1AppWithDefaults() *C1ApiAppV1App {
	this := C1ApiAppV1App{}
	return &this
}

// GetAppAccountId returns the AppAccountId field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetAppAccountId() string {
	if o == nil || IsNil(o.AppAccountId) {
		var ret string
		return ret
	}
	return *o.AppAccountId
}

// GetAppAccountIdOk returns a tuple with the AppAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetAppAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppAccountId) {
		return nil, false
	}
	return o.AppAccountId, true
}

// HasAppAccountId returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasAppAccountId() bool {
	if o != nil && !IsNil(o.AppAccountId) {
		return true
	}

	return false
}

// SetAppAccountId gets a reference to the given string and assigns it to the AppAccountId field.
func (o *C1ApiAppV1App) SetAppAccountId(v string) {
	o.AppAccountId = &v
}

// GetAppAccountName returns the AppAccountName field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetAppAccountName() string {
	if o == nil || IsNil(o.AppAccountName) {
		var ret string
		return ret
	}
	return *o.AppAccountName
}

// GetAppAccountNameOk returns a tuple with the AppAccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetAppAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppAccountName) {
		return nil, false
	}
	return o.AppAccountName, true
}

// HasAppAccountName returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasAppAccountName() bool {
	if o != nil && !IsNil(o.AppAccountName) {
		return true
	}

	return false
}

// SetAppAccountName gets a reference to the given string and assigns it to the AppAccountName field.
func (o *C1ApiAppV1App) SetAppAccountName(v string) {
	o.AppAccountName = &v
}

// GetCertifyPolicyId returns the CertifyPolicyId field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetCertifyPolicyId() string {
	if o == nil || IsNil(o.CertifyPolicyId) {
		var ret string
		return ret
	}
	return *o.CertifyPolicyId
}

// GetCertifyPolicyIdOk returns a tuple with the CertifyPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetCertifyPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CertifyPolicyId) {
		return nil, false
	}
	return o.CertifyPolicyId, true
}

// HasCertifyPolicyId returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasCertifyPolicyId() bool {
	if o != nil && !IsNil(o.CertifyPolicyId) {
		return true
	}

	return false
}

// SetCertifyPolicyId gets a reference to the given string and assigns it to the CertifyPolicyId field.
func (o *C1ApiAppV1App) SetCertifyPolicyId(v string) {
	o.CertifyPolicyId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *C1ApiAppV1App) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *C1ApiAppV1App) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *C1ApiAppV1App) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *C1ApiAppV1App) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFieldMask returns the FieldMask field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1App) GetFieldMask() string {
	if o == nil || IsNil(o.FieldMask.Get()) {
		var ret string
		return ret
	}
	return *o.FieldMask.Get()
}

// GetFieldMaskOk returns a tuple with the FieldMask field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1App) GetFieldMaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FieldMask.Get(), o.FieldMask.IsSet()
}

// HasFieldMask returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasFieldMask() bool {
	if o != nil && o.FieldMask.IsSet() {
		return true
	}

	return false
}

// SetFieldMask gets a reference to the given NullableString and assigns it to the FieldMask field.
func (o *C1ApiAppV1App) SetFieldMask(v string) {
	o.FieldMask.Set(&v)
}
// SetFieldMaskNil sets the value for FieldMask to be an explicit nil
func (o *C1ApiAppV1App) SetFieldMaskNil() {
	o.FieldMask.Set(nil)
}

// UnsetFieldMask ensures that no value is present for FieldMask, not even an explicit nil
func (o *C1ApiAppV1App) UnsetFieldMask() {
	o.FieldMask.Unset()
}

// GetGrantPolicyId returns the GrantPolicyId field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetGrantPolicyId() string {
	if o == nil || IsNil(o.GrantPolicyId) {
		var ret string
		return ret
	}
	return *o.GrantPolicyId
}

// GetGrantPolicyIdOk returns a tuple with the GrantPolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetGrantPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.GrantPolicyId) {
		return nil, false
	}
	return o.GrantPolicyId, true
}

// HasGrantPolicyId returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasGrantPolicyId() bool {
	if o != nil && !IsNil(o.GrantPolicyId) {
		return true
	}

	return false
}

// SetGrantPolicyId gets a reference to the given string and assigns it to the GrantPolicyId field.
func (o *C1ApiAppV1App) SetGrantPolicyId(v string) {
	o.GrantPolicyId = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetIconUrl() string {
	if o == nil || IsNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetIconUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasIconUrl() bool {
	if o != nil && !IsNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *C1ApiAppV1App) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *C1ApiAppV1App) SetId(v string) {
	o.Id = &v
}

// GetLogoUri returns the LogoUri field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetLogoUri() string {
	if o == nil || IsNil(o.LogoUri) {
		var ret string
		return ret
	}
	return *o.LogoUri
}

// GetLogoUriOk returns a tuple with the LogoUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetLogoUriOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUri) {
		return nil, false
	}
	return o.LogoUri, true
}

// HasLogoUri returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasLogoUri() bool {
	if o != nil && !IsNil(o.LogoUri) {
		return true
	}

	return false
}

// SetLogoUri gets a reference to the given string and assigns it to the LogoUri field.
func (o *C1ApiAppV1App) SetLogoUri(v string) {
	o.LogoUri = &v
}

// GetMonthlyCostUsd returns the MonthlyCostUsd field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetMonthlyCostUsd() float32 {
	if o == nil || IsNil(o.MonthlyCostUsd) {
		var ret float32
		return ret
	}
	return *o.MonthlyCostUsd
}

// GetMonthlyCostUsdOk returns a tuple with the MonthlyCostUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetMonthlyCostUsdOk() (*float32, bool) {
	if o == nil || IsNil(o.MonthlyCostUsd) {
		return nil, false
	}
	return o.MonthlyCostUsd, true
}

// HasMonthlyCostUsd returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasMonthlyCostUsd() bool {
	if o != nil && !IsNil(o.MonthlyCostUsd) {
		return true
	}

	return false
}

// SetMonthlyCostUsd gets a reference to the given float32 and assigns it to the MonthlyCostUsd field.
func (o *C1ApiAppV1App) SetMonthlyCostUsd(v float32) {
	o.MonthlyCostUsd = &v
}

// GetParentAppId returns the ParentAppId field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetParentAppId() string {
	if o == nil || IsNil(o.ParentAppId) {
		var ret string
		return ret
	}
	return *o.ParentAppId
}

// GetParentAppIdOk returns a tuple with the ParentAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetParentAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentAppId) {
		return nil, false
	}
	return o.ParentAppId, true
}

// HasParentAppId returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasParentAppId() bool {
	if o != nil && !IsNil(o.ParentAppId) {
		return true
	}

	return false
}

// SetParentAppId gets a reference to the given string and assigns it to the ParentAppId field.
func (o *C1ApiAppV1App) SetParentAppId(v string) {
	o.ParentAppId = &v
}

// GetRevokePolicyId returns the RevokePolicyId field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetRevokePolicyId() string {
	if o == nil || IsNil(o.RevokePolicyId) {
		var ret string
		return ret
	}
	return *o.RevokePolicyId
}

// GetRevokePolicyIdOk returns a tuple with the RevokePolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetRevokePolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.RevokePolicyId) {
		return nil, false
	}
	return o.RevokePolicyId, true
}

// HasRevokePolicyId returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasRevokePolicyId() bool {
	if o != nil && !IsNil(o.RevokePolicyId) {
		return true
	}

	return false
}

// SetRevokePolicyId gets a reference to the given string and assigns it to the RevokePolicyId field.
func (o *C1ApiAppV1App) SetRevokePolicyId(v string) {
	o.RevokePolicyId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *C1ApiAppV1App) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUserCount returns the UserCount field value if set, zero value otherwise.
func (o *C1ApiAppV1App) GetUserCount() string {
	if o == nil || IsNil(o.UserCount) {
		var ret string
		return ret
	}
	return *o.UserCount
}

// GetUserCountOk returns a tuple with the UserCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1App) GetUserCountOk() (*string, bool) {
	if o == nil || IsNil(o.UserCount) {
		return nil, false
	}
	return o.UserCount, true
}

// HasUserCount returns a boolean if a field has been set.
func (o *C1ApiAppV1App) HasUserCount() bool {
	if o != nil && !IsNil(o.UserCount) {
		return true
	}

	return false
}

// SetUserCount gets a reference to the given string and assigns it to the UserCount field.
func (o *C1ApiAppV1App) SetUserCount(v string) {
	o.UserCount = &v
}

func (o C1ApiAppV1App) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAppV1App) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppAccountId) {
		toSerialize["appAccountId"] = o.AppAccountId
	}
	if !IsNil(o.AppAccountName) {
		toSerialize["appAccountName"] = o.AppAccountName
	}
	if !IsNil(o.CertifyPolicyId) {
		toSerialize["certifyPolicyId"] = o.CertifyPolicyId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.FieldMask.IsSet() {
		toSerialize["fieldMask"] = o.FieldMask.Get()
	}
	if !IsNil(o.GrantPolicyId) {
		toSerialize["grantPolicyId"] = o.GrantPolicyId
	}
	if !IsNil(o.IconUrl) {
		toSerialize["iconUrl"] = o.IconUrl
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LogoUri) {
		toSerialize["logoUri"] = o.LogoUri
	}
	if !IsNil(o.MonthlyCostUsd) {
		toSerialize["monthlyCostUsd"] = o.MonthlyCostUsd
	}
	if !IsNil(o.ParentAppId) {
		toSerialize["parentAppId"] = o.ParentAppId
	}
	if !IsNil(o.RevokePolicyId) {
		toSerialize["revokePolicyId"] = o.RevokePolicyId
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.UserCount) {
		toSerialize["userCount"] = o.UserCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAppV1App) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAppV1App := _C1ApiAppV1App{}

	if err = json.Unmarshal(bytes, &varC1ApiAppV1App); err == nil {
		*o = C1ApiAppV1App(varC1ApiAppV1App)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appAccountId")
		delete(additionalProperties, "appAccountName")
		delete(additionalProperties, "certifyPolicyId")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "deletedAt")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "fieldMask")
		delete(additionalProperties, "grantPolicyId")
		delete(additionalProperties, "iconUrl")
		delete(additionalProperties, "id")
		delete(additionalProperties, "logoUri")
		delete(additionalProperties, "monthlyCostUsd")
		delete(additionalProperties, "parentAppId")
		delete(additionalProperties, "revokePolicyId")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "userCount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAppV1App struct {
	value *C1ApiAppV1App
	isSet bool
}

func (v NullableC1ApiAppV1App) Get() *C1ApiAppV1App {
	return v.value
}

func (v *NullableC1ApiAppV1App) Set(val *C1ApiAppV1App) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAppV1App) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAppV1App) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAppV1App(val *C1ApiAppV1App) *NullableC1ApiAppV1App {
	return &NullableC1ApiAppV1App{value: val, isSet: true}
}

func (v NullableC1ApiAppV1App) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAppV1App) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


