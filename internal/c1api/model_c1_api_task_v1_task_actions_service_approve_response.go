/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiTaskV1TaskActionsServiceApproveResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiTaskV1TaskActionsServiceApproveResponse{}

// C1ApiTaskV1TaskActionsServiceApproveResponse The TaskActionsServiceApproveResponse message.
type C1ApiTaskV1TaskActionsServiceApproveResponse struct {
	// The expanded field.
	Expanded []C1ApiAppV1AppResourceServiceGetResponseExpandedInner `json:"expanded,omitempty"`
	TaskView *C1ApiTaskV1TaskView `json:"taskView,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiTaskV1TaskActionsServiceApproveResponse C1ApiTaskV1TaskActionsServiceApproveResponse

// NewC1ApiTaskV1TaskActionsServiceApproveResponse instantiates a new C1ApiTaskV1TaskActionsServiceApproveResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiTaskV1TaskActionsServiceApproveResponse() *C1ApiTaskV1TaskActionsServiceApproveResponse {
	this := C1ApiTaskV1TaskActionsServiceApproveResponse{}
	return &this
}

// NewC1ApiTaskV1TaskActionsServiceApproveResponseWithDefaults instantiates a new C1ApiTaskV1TaskActionsServiceApproveResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiTaskV1TaskActionsServiceApproveResponseWithDefaults() *C1ApiTaskV1TaskActionsServiceApproveResponse {
	this := C1ApiTaskV1TaskActionsServiceApproveResponse{}
	return &this
}

// GetExpanded returns the Expanded field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) GetExpanded() []C1ApiAppV1AppResourceServiceGetResponseExpandedInner {
	if o == nil {
		var ret []C1ApiAppV1AppResourceServiceGetResponseExpandedInner
		return ret
	}
	return o.Expanded
}

// GetExpandedOk returns a tuple with the Expanded field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) GetExpandedOk() ([]C1ApiAppV1AppResourceServiceGetResponseExpandedInner, bool) {
	if o == nil || IsNil(o.Expanded) {
		return nil, false
	}
	return o.Expanded, true
}

// HasExpanded returns a boolean if a field has been set.
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) HasExpanded() bool {
	if o != nil && IsNil(o.Expanded) {
		return true
	}

	return false
}

// SetExpanded gets a reference to the given []C1ApiAppV1AppResourceServiceGetResponseExpandedInner and assigns it to the Expanded field.
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) SetExpanded(v []C1ApiAppV1AppResourceServiceGetResponseExpandedInner) {
	o.Expanded = v
}

// GetTaskView returns the TaskView field value if set, zero value otherwise.
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) GetTaskView() C1ApiTaskV1TaskView {
	if o == nil || IsNil(o.TaskView) {
		var ret C1ApiTaskV1TaskView
		return ret
	}
	return *o.TaskView
}

// GetTaskViewOk returns a tuple with the TaskView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) GetTaskViewOk() (*C1ApiTaskV1TaskView, bool) {
	if o == nil || IsNil(o.TaskView) {
		return nil, false
	}
	return o.TaskView, true
}

// HasTaskView returns a boolean if a field has been set.
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) HasTaskView() bool {
	if o != nil && !IsNil(o.TaskView) {
		return true
	}

	return false
}

// SetTaskView gets a reference to the given C1ApiTaskV1TaskView and assigns it to the TaskView field.
func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) SetTaskView(v C1ApiTaskV1TaskView) {
	o.TaskView = &v
}

func (o C1ApiTaskV1TaskActionsServiceApproveResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiTaskV1TaskActionsServiceApproveResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Expanded != nil {
		toSerialize["expanded"] = o.Expanded
	}
	if !IsNil(o.TaskView) {
		toSerialize["taskView"] = o.TaskView
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiTaskV1TaskActionsServiceApproveResponse) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiTaskV1TaskActionsServiceApproveResponse := _C1ApiTaskV1TaskActionsServiceApproveResponse{}

	if err = json.Unmarshal(bytes, &varC1ApiTaskV1TaskActionsServiceApproveResponse); err == nil {
		*o = C1ApiTaskV1TaskActionsServiceApproveResponse(varC1ApiTaskV1TaskActionsServiceApproveResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "expanded")
		delete(additionalProperties, "taskView")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiTaskV1TaskActionsServiceApproveResponse struct {
	value *C1ApiTaskV1TaskActionsServiceApproveResponse
	isSet bool
}

func (v NullableC1ApiTaskV1TaskActionsServiceApproveResponse) Get() *C1ApiTaskV1TaskActionsServiceApproveResponse {
	return v.value
}

func (v *NullableC1ApiTaskV1TaskActionsServiceApproveResponse) Set(val *C1ApiTaskV1TaskActionsServiceApproveResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiTaskV1TaskActionsServiceApproveResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiTaskV1TaskActionsServiceApproveResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiTaskV1TaskActionsServiceApproveResponse(val *C1ApiTaskV1TaskActionsServiceApproveResponse) *NullableC1ApiTaskV1TaskActionsServiceApproveResponse {
	return &NullableC1ApiTaskV1TaskActionsServiceApproveResponse{value: val, isSet: true}
}

func (v NullableC1ApiTaskV1TaskActionsServiceApproveResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiTaskV1TaskActionsServiceApproveResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


