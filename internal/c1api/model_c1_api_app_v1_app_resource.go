/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
	"time"
)

// checks if the C1ApiAppV1AppResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAppV1AppResource{}

// C1ApiAppV1AppResource The AppResource message.
type C1ApiAppV1AppResource struct {
	// The appId field.
	AppId *string `json:"appId,omitempty"`
	// The appResourceTypeId field.
	AppResourceTypeId *string `json:"appResourceTypeId,omitempty"`
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// The customDescription field.
	CustomDescription *string `json:"customDescription,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// The description field.
	Description *string `json:"description,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The grantCount field.
	GrantCount *string `json:"grantCount,omitempty"`
	// The id field.
	Id *string `json:"id,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAppV1AppResource C1ApiAppV1AppResource

// NewC1ApiAppV1AppResource instantiates a new C1ApiAppV1AppResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAppV1AppResource() *C1ApiAppV1AppResource {
	this := C1ApiAppV1AppResource{}
	return &this
}

// NewC1ApiAppV1AppResourceWithDefaults instantiates a new C1ApiAppV1AppResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAppV1AppResourceWithDefaults() *C1ApiAppV1AppResource {
	this := C1ApiAppV1AppResource{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *C1ApiAppV1AppResource) SetAppId(v string) {
	o.AppId = &v
}

// GetAppResourceTypeId returns the AppResourceTypeId field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetAppResourceTypeId() string {
	if o == nil || IsNil(o.AppResourceTypeId) {
		var ret string
		return ret
	}
	return *o.AppResourceTypeId
}

// GetAppResourceTypeIdOk returns a tuple with the AppResourceTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetAppResourceTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppResourceTypeId) {
		return nil, false
	}
	return o.AppResourceTypeId, true
}

// HasAppResourceTypeId returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasAppResourceTypeId() bool {
	if o != nil && !IsNil(o.AppResourceTypeId) {
		return true
	}

	return false
}

// SetAppResourceTypeId gets a reference to the given string and assigns it to the AppResourceTypeId field.
func (o *C1ApiAppV1AppResource) SetAppResourceTypeId(v string) {
	o.AppResourceTypeId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *C1ApiAppV1AppResource) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCustomDescription returns the CustomDescription field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetCustomDescription() string {
	if o == nil || IsNil(o.CustomDescription) {
		var ret string
		return ret
	}
	return *o.CustomDescription
}

// GetCustomDescriptionOk returns a tuple with the CustomDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetCustomDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.CustomDescription) {
		return nil, false
	}
	return o.CustomDescription, true
}

// HasCustomDescription returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasCustomDescription() bool {
	if o != nil && !IsNil(o.CustomDescription) {
		return true
	}

	return false
}

// SetCustomDescription gets a reference to the given string and assigns it to the CustomDescription field.
func (o *C1ApiAppV1AppResource) SetCustomDescription(v string) {
	o.CustomDescription = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *C1ApiAppV1AppResource) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *C1ApiAppV1AppResource) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *C1ApiAppV1AppResource) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetGrantCount returns the GrantCount field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetGrantCount() string {
	if o == nil || IsNil(o.GrantCount) {
		var ret string
		return ret
	}
	return *o.GrantCount
}

// GetGrantCountOk returns a tuple with the GrantCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetGrantCountOk() (*string, bool) {
	if o == nil || IsNil(o.GrantCount) {
		return nil, false
	}
	return o.GrantCount, true
}

// HasGrantCount returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasGrantCount() bool {
	if o != nil && !IsNil(o.GrantCount) {
		return true
	}

	return false
}

// SetGrantCount gets a reference to the given string and assigns it to the GrantCount field.
func (o *C1ApiAppV1AppResource) SetGrantCount(v string) {
	o.GrantCount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *C1ApiAppV1AppResource) SetId(v string) {
	o.Id = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *C1ApiAppV1AppResource) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1AppResource) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResource) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *C1ApiAppV1AppResource) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o C1ApiAppV1AppResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAppV1AppResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppResourceTypeId) {
		toSerialize["appResourceTypeId"] = o.AppResourceTypeId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CustomDescription) {
		toSerialize["customDescription"] = o.CustomDescription
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.GrantCount) {
		toSerialize["grantCount"] = o.GrantCount
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAppV1AppResource) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAppV1AppResource := _C1ApiAppV1AppResource{}

	if err = json.Unmarshal(bytes, &varC1ApiAppV1AppResource); err == nil {
		*o = C1ApiAppV1AppResource(varC1ApiAppV1AppResource)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appId")
		delete(additionalProperties, "appResourceTypeId")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "customDescription")
		delete(additionalProperties, "deletedAt")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "grantCount")
		delete(additionalProperties, "id")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAppV1AppResource struct {
	value *C1ApiAppV1AppResource
	isSet bool
}

func (v NullableC1ApiAppV1AppResource) Get() *C1ApiAppV1AppResource {
	return v.value
}

func (v *NullableC1ApiAppV1AppResource) Set(val *C1ApiAppV1AppResource) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAppV1AppResource) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAppV1AppResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAppV1AppResource(val *C1ApiAppV1AppResource) *NullableC1ApiAppV1AppResource {
	return &NullableC1ApiAppV1AppResource{value: val, isSet: true}
}

func (v NullableC1ApiAppV1AppResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAppV1AppResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


