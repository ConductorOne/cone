// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Approval - The Approval message.
//
// This message contains a oneof named typ. Only a single field of the following list may be set at a time:
//   - users
//   - manager
//   - appOwners
//   - group
//   - self
//   - entitlementOwners
type Approval struct {
	// The AppGroupApproval message.
	AppGroupApproval *AppGroupApproval `json:"group,omitempty"`
	// The AppOwnerApproval message.
	AppOwnerApproval *AppOwnerApproval `json:"appOwners,omitempty"`
	// The EntitlementOwnerApproval message.
	EntitlementOwnerApproval *EntitlementOwnerApproval `json:"entitlementOwners,omitempty"`
	// The ManagerApproval message.
	ManagerApproval *ManagerApproval `json:"manager,omitempty"`
	// The SelfApproval message.
	SelfApproval *SelfApproval `json:"self,omitempty"`
	// The UserApproval message.
	UserApproval *UserApproval `json:"users,omitempty"`
	// The allowReassignment field.
	AllowReassignment *bool `json:"allowReassignment,omitempty"`
	// The assigned field.
	Assigned *bool `json:"assigned,omitempty"`
	// The requireApprovalReason field.
	RequireApprovalReason *bool `json:"requireApprovalReason,omitempty"`
	// The requireReassignmentReason field.
	RequireReassignmentReason *bool `json:"requireReassignmentReason,omitempty"`
}

func (o *Approval) GetAppGroupApproval() *AppGroupApproval {
	if o == nil {
		return nil
	}
	return o.AppGroupApproval
}

func (o *Approval) GetAppOwnerApproval() *AppOwnerApproval {
	if o == nil {
		return nil
	}
	return o.AppOwnerApproval
}

func (o *Approval) GetEntitlementOwnerApproval() *EntitlementOwnerApproval {
	if o == nil {
		return nil
	}
	return o.EntitlementOwnerApproval
}

func (o *Approval) GetManagerApproval() *ManagerApproval {
	if o == nil {
		return nil
	}
	return o.ManagerApproval
}

func (o *Approval) GetSelfApproval() *SelfApproval {
	if o == nil {
		return nil
	}
	return o.SelfApproval
}

func (o *Approval) GetUserApproval() *UserApproval {
	if o == nil {
		return nil
	}
	return o.UserApproval
}

func (o *Approval) GetAllowReassignment() *bool {
	if o == nil {
		return nil
	}
	return o.AllowReassignment
}

func (o *Approval) GetAssigned() *bool {
	if o == nil {
		return nil
	}
	return o.Assigned
}

func (o *Approval) GetRequireApprovalReason() *bool {
	if o == nil {
		return nil
	}
	return o.RequireApprovalReason
}

func (o *Approval) GetRequireReassignmentReason() *bool {
	if o == nil {
		return nil
	}
	return o.RequireReassignmentReason
}
