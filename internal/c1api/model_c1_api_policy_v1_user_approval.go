/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiPolicyV1UserApproval type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiPolicyV1UserApproval{}

// C1ApiPolicyV1UserApproval The UserApproval message.
type C1ApiPolicyV1UserApproval struct {
	// The allowSelfApproval field.
	AllowSelfApproval *bool `json:"allowSelfApproval,omitempty"`
	// The userIds field.
	UserIds []string `json:"userIds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiPolicyV1UserApproval C1ApiPolicyV1UserApproval

// NewC1ApiPolicyV1UserApproval instantiates a new C1ApiPolicyV1UserApproval object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiPolicyV1UserApproval() *C1ApiPolicyV1UserApproval {
	this := C1ApiPolicyV1UserApproval{}
	return &this
}

// NewC1ApiPolicyV1UserApprovalWithDefaults instantiates a new C1ApiPolicyV1UserApproval object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiPolicyV1UserApprovalWithDefaults() *C1ApiPolicyV1UserApproval {
	this := C1ApiPolicyV1UserApproval{}
	return &this
}

// GetAllowSelfApproval returns the AllowSelfApproval field value if set, zero value otherwise.
func (o *C1ApiPolicyV1UserApproval) GetAllowSelfApproval() bool {
	if o == nil || IsNil(o.AllowSelfApproval) {
		var ret bool
		return ret
	}
	return *o.AllowSelfApproval
}

// GetAllowSelfApprovalOk returns a tuple with the AllowSelfApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1UserApproval) GetAllowSelfApprovalOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSelfApproval) {
		return nil, false
	}
	return o.AllowSelfApproval, true
}

// HasAllowSelfApproval returns a boolean if a field has been set.
func (o *C1ApiPolicyV1UserApproval) HasAllowSelfApproval() bool {
	if o != nil && !IsNil(o.AllowSelfApproval) {
		return true
	}

	return false
}

// SetAllowSelfApproval gets a reference to the given bool and assigns it to the AllowSelfApproval field.
func (o *C1ApiPolicyV1UserApproval) SetAllowSelfApproval(v bool) {
	o.AllowSelfApproval = &v
}

// GetUserIds returns the UserIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiPolicyV1UserApproval) GetUserIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.UserIds
}

// GetUserIdsOk returns a tuple with the UserIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiPolicyV1UserApproval) GetUserIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserIds) {
		return nil, false
	}
	return o.UserIds, true
}

// HasUserIds returns a boolean if a field has been set.
func (o *C1ApiPolicyV1UserApproval) HasUserIds() bool {
	if o != nil && IsNil(o.UserIds) {
		return true
	}

	return false
}

// SetUserIds gets a reference to the given []string and assigns it to the UserIds field.
func (o *C1ApiPolicyV1UserApproval) SetUserIds(v []string) {
	o.UserIds = v
}

func (o C1ApiPolicyV1UserApproval) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiPolicyV1UserApproval) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowSelfApproval) {
		toSerialize["allowSelfApproval"] = o.AllowSelfApproval
	}
	if o.UserIds != nil {
		toSerialize["userIds"] = o.UserIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiPolicyV1UserApproval) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiPolicyV1UserApproval := _C1ApiPolicyV1UserApproval{}

	if err = json.Unmarshal(bytes, &varC1ApiPolicyV1UserApproval); err == nil {
		*o = C1ApiPolicyV1UserApproval(varC1ApiPolicyV1UserApproval)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "allowSelfApproval")
		delete(additionalProperties, "userIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiPolicyV1UserApproval struct {
	value *C1ApiPolicyV1UserApproval
	isSet bool
}

func (v NullableC1ApiPolicyV1UserApproval) Get() *C1ApiPolicyV1UserApproval {
	return v.value
}

func (v *NullableC1ApiPolicyV1UserApproval) Set(val *C1ApiPolicyV1UserApproval) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiPolicyV1UserApproval) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiPolicyV1UserApproval) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiPolicyV1UserApproval(val *C1ApiPolicyV1UserApproval) *NullableC1ApiPolicyV1UserApproval {
	return &NullableC1ApiPolicyV1UserApproval{value: val, isSet: true}
}

func (v NullableC1ApiPolicyV1UserApproval) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiPolicyV1UserApproval) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


