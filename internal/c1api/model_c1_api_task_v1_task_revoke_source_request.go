/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiTaskV1TaskRevokeSourceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiTaskV1TaskRevokeSourceRequest{}

// C1ApiTaskV1TaskRevokeSourceRequest The TaskRevokeSourceRequest message.
type C1ApiTaskV1TaskRevokeSourceRequest struct {
	// The requestUserId field.
	RequestUserId *string `json:"requestUserId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiTaskV1TaskRevokeSourceRequest C1ApiTaskV1TaskRevokeSourceRequest

// NewC1ApiTaskV1TaskRevokeSourceRequest instantiates a new C1ApiTaskV1TaskRevokeSourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiTaskV1TaskRevokeSourceRequest() *C1ApiTaskV1TaskRevokeSourceRequest {
	this := C1ApiTaskV1TaskRevokeSourceRequest{}
	return &this
}

// NewC1ApiTaskV1TaskRevokeSourceRequestWithDefaults instantiates a new C1ApiTaskV1TaskRevokeSourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiTaskV1TaskRevokeSourceRequestWithDefaults() *C1ApiTaskV1TaskRevokeSourceRequest {
	this := C1ApiTaskV1TaskRevokeSourceRequest{}
	return &this
}

// GetRequestUserId returns the RequestUserId field value if set, zero value otherwise.
func (o *C1ApiTaskV1TaskRevokeSourceRequest) GetRequestUserId() string {
	if o == nil || IsNil(o.RequestUserId) {
		var ret string
		return ret
	}
	return *o.RequestUserId
}

// GetRequestUserIdOk returns a tuple with the RequestUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiTaskV1TaskRevokeSourceRequest) GetRequestUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestUserId) {
		return nil, false
	}
	return o.RequestUserId, true
}

// HasRequestUserId returns a boolean if a field has been set.
func (o *C1ApiTaskV1TaskRevokeSourceRequest) HasRequestUserId() bool {
	if o != nil && !IsNil(o.RequestUserId) {
		return true
	}

	return false
}

// SetRequestUserId gets a reference to the given string and assigns it to the RequestUserId field.
func (o *C1ApiTaskV1TaskRevokeSourceRequest) SetRequestUserId(v string) {
	o.RequestUserId = &v
}

func (o C1ApiTaskV1TaskRevokeSourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiTaskV1TaskRevokeSourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestUserId) {
		toSerialize["requestUserId"] = o.RequestUserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiTaskV1TaskRevokeSourceRequest) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiTaskV1TaskRevokeSourceRequest := _C1ApiTaskV1TaskRevokeSourceRequest{}

	if err = json.Unmarshal(bytes, &varC1ApiTaskV1TaskRevokeSourceRequest); err == nil {
		*o = C1ApiTaskV1TaskRevokeSourceRequest(varC1ApiTaskV1TaskRevokeSourceRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "requestUserId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiTaskV1TaskRevokeSourceRequest struct {
	value *C1ApiTaskV1TaskRevokeSourceRequest
	isSet bool
}

func (v NullableC1ApiTaskV1TaskRevokeSourceRequest) Get() *C1ApiTaskV1TaskRevokeSourceRequest {
	return v.value
}

func (v *NullableC1ApiTaskV1TaskRevokeSourceRequest) Set(val *C1ApiTaskV1TaskRevokeSourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiTaskV1TaskRevokeSourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiTaskV1TaskRevokeSourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiTaskV1TaskRevokeSourceRequest(val *C1ApiTaskV1TaskRevokeSourceRequest) *NullableC1ApiTaskV1TaskRevokeSourceRequest {
	return &NullableC1ApiTaskV1TaskRevokeSourceRequest{value: val, isSet: true}
}

func (v NullableC1ApiTaskV1TaskRevokeSourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiTaskV1TaskRevokeSourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


