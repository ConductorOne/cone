/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiAppV1GetAppEntitlementUserBindingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAppV1GetAppEntitlementUserBindingResponse{}

// C1ApiAppV1GetAppEntitlementUserBindingResponse The GetAppEntitlementUserBindingResponse message.
type C1ApiAppV1GetAppEntitlementUserBindingResponse struct {
	AppEntitlementUserBinding *C1ApiAppV1AppEntitlementUserBinding `json:"appEntitlementUserBinding,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAppV1GetAppEntitlementUserBindingResponse C1ApiAppV1GetAppEntitlementUserBindingResponse

// NewC1ApiAppV1GetAppEntitlementUserBindingResponse instantiates a new C1ApiAppV1GetAppEntitlementUserBindingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAppV1GetAppEntitlementUserBindingResponse() *C1ApiAppV1GetAppEntitlementUserBindingResponse {
	this := C1ApiAppV1GetAppEntitlementUserBindingResponse{}
	return &this
}

// NewC1ApiAppV1GetAppEntitlementUserBindingResponseWithDefaults instantiates a new C1ApiAppV1GetAppEntitlementUserBindingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAppV1GetAppEntitlementUserBindingResponseWithDefaults() *C1ApiAppV1GetAppEntitlementUserBindingResponse {
	this := C1ApiAppV1GetAppEntitlementUserBindingResponse{}
	return &this
}

// GetAppEntitlementUserBinding returns the AppEntitlementUserBinding field value if set, zero value otherwise.
func (o *C1ApiAppV1GetAppEntitlementUserBindingResponse) GetAppEntitlementUserBinding() C1ApiAppV1AppEntitlementUserBinding {
	if o == nil || IsNil(o.AppEntitlementUserBinding) {
		var ret C1ApiAppV1AppEntitlementUserBinding
		return ret
	}
	return *o.AppEntitlementUserBinding
}

// GetAppEntitlementUserBindingOk returns a tuple with the AppEntitlementUserBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1GetAppEntitlementUserBindingResponse) GetAppEntitlementUserBindingOk() (*C1ApiAppV1AppEntitlementUserBinding, bool) {
	if o == nil || IsNil(o.AppEntitlementUserBinding) {
		return nil, false
	}
	return o.AppEntitlementUserBinding, true
}

// HasAppEntitlementUserBinding returns a boolean if a field has been set.
func (o *C1ApiAppV1GetAppEntitlementUserBindingResponse) HasAppEntitlementUserBinding() bool {
	if o != nil && !IsNil(o.AppEntitlementUserBinding) {
		return true
	}

	return false
}

// SetAppEntitlementUserBinding gets a reference to the given C1ApiAppV1AppEntitlementUserBinding and assigns it to the AppEntitlementUserBinding field.
func (o *C1ApiAppV1GetAppEntitlementUserBindingResponse) SetAppEntitlementUserBinding(v C1ApiAppV1AppEntitlementUserBinding) {
	o.AppEntitlementUserBinding = &v
}

func (o C1ApiAppV1GetAppEntitlementUserBindingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAppV1GetAppEntitlementUserBindingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppEntitlementUserBinding) {
		toSerialize["appEntitlementUserBinding"] = o.AppEntitlementUserBinding
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAppV1GetAppEntitlementUserBindingResponse) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAppV1GetAppEntitlementUserBindingResponse := _C1ApiAppV1GetAppEntitlementUserBindingResponse{}

	if err = json.Unmarshal(bytes, &varC1ApiAppV1GetAppEntitlementUserBindingResponse); err == nil {
		*o = C1ApiAppV1GetAppEntitlementUserBindingResponse(varC1ApiAppV1GetAppEntitlementUserBindingResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appEntitlementUserBinding")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAppV1GetAppEntitlementUserBindingResponse struct {
	value *C1ApiAppV1GetAppEntitlementUserBindingResponse
	isSet bool
}

func (v NullableC1ApiAppV1GetAppEntitlementUserBindingResponse) Get() *C1ApiAppV1GetAppEntitlementUserBindingResponse {
	return v.value
}

func (v *NullableC1ApiAppV1GetAppEntitlementUserBindingResponse) Set(val *C1ApiAppV1GetAppEntitlementUserBindingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAppV1GetAppEntitlementUserBindingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAppV1GetAppEntitlementUserBindingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAppV1GetAppEntitlementUserBindingResponse(val *C1ApiAppV1GetAppEntitlementUserBindingResponse) *NullableC1ApiAppV1GetAppEntitlementUserBindingResponse {
	return &NullableC1ApiAppV1GetAppEntitlementUserBindingResponse{value: val, isSet: true}
}

func (v NullableC1ApiAppV1GetAppEntitlementUserBindingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAppV1GetAppEntitlementUserBindingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


