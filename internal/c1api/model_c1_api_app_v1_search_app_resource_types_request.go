/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiAppV1SearchAppResourceTypesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAppV1SearchAppResourceTypesRequest{}

// C1ApiAppV1SearchAppResourceTypesRequest The SearchAppResourceTypesRequest message.
type C1ApiAppV1SearchAppResourceTypesRequest struct {
	// The appIds field.
	AppIds []string `json:"appIds,omitempty"`
	// The excludeResourceTypeIds field.
	ExcludeResourceTypeIds []string `json:"excludeResourceTypeIds,omitempty"`
	// The excludeResourceTypeTraitIds field.
	ExcludeResourceTypeTraitIds []string `json:"excludeResourceTypeTraitIds,omitempty"`
	// The pageSize field.
	PageSize *float32 `json:"pageSize,omitempty"`
	// The pageToken field.
	PageToken *string `json:"pageToken,omitempty"`
	// The query field.
	Query *string `json:"query,omitempty"`
	// The resourceTypeIds field.
	ResourceTypeIds []string `json:"resourceTypeIds,omitempty"`
	// The resourceTypeTraitIds field.
	ResourceTypeTraitIds []string `json:"resourceTypeTraitIds,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAppV1SearchAppResourceTypesRequest C1ApiAppV1SearchAppResourceTypesRequest

// NewC1ApiAppV1SearchAppResourceTypesRequest instantiates a new C1ApiAppV1SearchAppResourceTypesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAppV1SearchAppResourceTypesRequest() *C1ApiAppV1SearchAppResourceTypesRequest {
	this := C1ApiAppV1SearchAppResourceTypesRequest{}
	return &this
}

// NewC1ApiAppV1SearchAppResourceTypesRequestWithDefaults instantiates a new C1ApiAppV1SearchAppResourceTypesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAppV1SearchAppResourceTypesRequestWithDefaults() *C1ApiAppV1SearchAppResourceTypesRequest {
	this := C1ApiAppV1SearchAppResourceTypesRequest{}
	return &this
}

// GetAppIds returns the AppIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetAppIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AppIds
}

// GetAppIdsOk returns a tuple with the AppIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetAppIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AppIds) {
		return nil, false
	}
	return o.AppIds, true
}

// HasAppIds returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasAppIds() bool {
	if o != nil && IsNil(o.AppIds) {
		return true
	}

	return false
}

// SetAppIds gets a reference to the given []string and assigns it to the AppIds field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetAppIds(v []string) {
	o.AppIds = v
}

// GetExcludeResourceTypeIds returns the ExcludeResourceTypeIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetExcludeResourceTypeIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludeResourceTypeIds
}

// GetExcludeResourceTypeIdsOk returns a tuple with the ExcludeResourceTypeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetExcludeResourceTypeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeResourceTypeIds) {
		return nil, false
	}
	return o.ExcludeResourceTypeIds, true
}

// HasExcludeResourceTypeIds returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasExcludeResourceTypeIds() bool {
	if o != nil && IsNil(o.ExcludeResourceTypeIds) {
		return true
	}

	return false
}

// SetExcludeResourceTypeIds gets a reference to the given []string and assigns it to the ExcludeResourceTypeIds field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetExcludeResourceTypeIds(v []string) {
	o.ExcludeResourceTypeIds = v
}

// GetExcludeResourceTypeTraitIds returns the ExcludeResourceTypeTraitIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetExcludeResourceTypeTraitIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExcludeResourceTypeTraitIds
}

// GetExcludeResourceTypeTraitIdsOk returns a tuple with the ExcludeResourceTypeTraitIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetExcludeResourceTypeTraitIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeResourceTypeTraitIds) {
		return nil, false
	}
	return o.ExcludeResourceTypeTraitIds, true
}

// HasExcludeResourceTypeTraitIds returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasExcludeResourceTypeTraitIds() bool {
	if o != nil && IsNil(o.ExcludeResourceTypeTraitIds) {
		return true
	}

	return false
}

// SetExcludeResourceTypeTraitIds gets a reference to the given []string and assigns it to the ExcludeResourceTypeTraitIds field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetExcludeResourceTypeTraitIds(v []string) {
	o.ExcludeResourceTypeTraitIds = v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetPageSize() float32 {
	if o == nil || IsNil(o.PageSize) {
		var ret float32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetPageSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given float32 and assigns it to the PageSize field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetPageSize(v float32) {
	o.PageSize = &v
}

// GetPageToken returns the PageToken field value if set, zero value otherwise.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetPageToken() string {
	if o == nil || IsNil(o.PageToken) {
		var ret string
		return ret
	}
	return *o.PageToken
}

// GetPageTokenOk returns a tuple with the PageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetPageTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PageToken) {
		return nil, false
	}
	return o.PageToken, true
}

// HasPageToken returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasPageToken() bool {
	if o != nil && !IsNil(o.PageToken) {
		return true
	}

	return false
}

// SetPageToken gets a reference to the given string and assigns it to the PageToken field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetPageToken(v string) {
	o.PageToken = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetQuery(v string) {
	o.Query = &v
}

// GetResourceTypeIds returns the ResourceTypeIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetResourceTypeIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ResourceTypeIds
}

// GetResourceTypeIdsOk returns a tuple with the ResourceTypeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetResourceTypeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourceTypeIds) {
		return nil, false
	}
	return o.ResourceTypeIds, true
}

// HasResourceTypeIds returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasResourceTypeIds() bool {
	if o != nil && IsNil(o.ResourceTypeIds) {
		return true
	}

	return false
}

// SetResourceTypeIds gets a reference to the given []string and assigns it to the ResourceTypeIds field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetResourceTypeIds(v []string) {
	o.ResourceTypeIds = v
}

// GetResourceTypeTraitIds returns the ResourceTypeTraitIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetResourceTypeTraitIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ResourceTypeTraitIds
}

// GetResourceTypeTraitIdsOk returns a tuple with the ResourceTypeTraitIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1SearchAppResourceTypesRequest) GetResourceTypeTraitIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourceTypeTraitIds) {
		return nil, false
	}
	return o.ResourceTypeTraitIds, true
}

// HasResourceTypeTraitIds returns a boolean if a field has been set.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) HasResourceTypeTraitIds() bool {
	if o != nil && IsNil(o.ResourceTypeTraitIds) {
		return true
	}

	return false
}

// SetResourceTypeTraitIds gets a reference to the given []string and assigns it to the ResourceTypeTraitIds field.
func (o *C1ApiAppV1SearchAppResourceTypesRequest) SetResourceTypeTraitIds(v []string) {
	o.ResourceTypeTraitIds = v
}

func (o C1ApiAppV1SearchAppResourceTypesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAppV1SearchAppResourceTypesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AppIds != nil {
		toSerialize["appIds"] = o.AppIds
	}
	if o.ExcludeResourceTypeIds != nil {
		toSerialize["excludeResourceTypeIds"] = o.ExcludeResourceTypeIds
	}
	if o.ExcludeResourceTypeTraitIds != nil {
		toSerialize["excludeResourceTypeTraitIds"] = o.ExcludeResourceTypeTraitIds
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.PageToken) {
		toSerialize["pageToken"] = o.PageToken
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if o.ResourceTypeIds != nil {
		toSerialize["resourceTypeIds"] = o.ResourceTypeIds
	}
	if o.ResourceTypeTraitIds != nil {
		toSerialize["resourceTypeTraitIds"] = o.ResourceTypeTraitIds
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAppV1SearchAppResourceTypesRequest) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAppV1SearchAppResourceTypesRequest := _C1ApiAppV1SearchAppResourceTypesRequest{}

	if err = json.Unmarshal(bytes, &varC1ApiAppV1SearchAppResourceTypesRequest); err == nil {
		*o = C1ApiAppV1SearchAppResourceTypesRequest(varC1ApiAppV1SearchAppResourceTypesRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appIds")
		delete(additionalProperties, "excludeResourceTypeIds")
		delete(additionalProperties, "excludeResourceTypeTraitIds")
		delete(additionalProperties, "pageSize")
		delete(additionalProperties, "pageToken")
		delete(additionalProperties, "query")
		delete(additionalProperties, "resourceTypeIds")
		delete(additionalProperties, "resourceTypeTraitIds")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAppV1SearchAppResourceTypesRequest struct {
	value *C1ApiAppV1SearchAppResourceTypesRequest
	isSet bool
}

func (v NullableC1ApiAppV1SearchAppResourceTypesRequest) Get() *C1ApiAppV1SearchAppResourceTypesRequest {
	return v.value
}

func (v *NullableC1ApiAppV1SearchAppResourceTypesRequest) Set(val *C1ApiAppV1SearchAppResourceTypesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAppV1SearchAppResourceTypesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAppV1SearchAppResourceTypesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAppV1SearchAppResourceTypesRequest(val *C1ApiAppV1SearchAppResourceTypesRequest) *NullableC1ApiAppV1SearchAppResourceTypesRequest {
	return &NullableC1ApiAppV1SearchAppResourceTypesRequest{value: val, isSet: true}
}

func (v NullableC1ApiAppV1SearchAppResourceTypesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAppV1SearchAppResourceTypesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


