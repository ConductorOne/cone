/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
	"time"
)

// checks if the C1ApiIamV1Role type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiIamV1Role{}

// C1ApiIamV1Role The Role message.
type C1ApiIamV1Role struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The id field.
	Id *string `json:"id,omitempty"`
	// The name field.
	Name *string `json:"name,omitempty"`
	// The permissions field.
	Permissions []string `json:"permissions,omitempty"`
	// The serviceRoles field.
	ServiceRoles []string `json:"serviceRoles,omitempty"`
	// The systemBuiltin field.
	SystemBuiltin *bool `json:"systemBuiltin,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiIamV1Role C1ApiIamV1Role

// NewC1ApiIamV1Role instantiates a new C1ApiIamV1Role object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiIamV1Role() *C1ApiIamV1Role {
	this := C1ApiIamV1Role{}
	return &this
}

// NewC1ApiIamV1RoleWithDefaults instantiates a new C1ApiIamV1Role object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiIamV1RoleWithDefaults() *C1ApiIamV1Role {
	this := C1ApiIamV1Role{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *C1ApiIamV1Role) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiIamV1Role) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *C1ApiIamV1Role) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *C1ApiIamV1Role) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiIamV1Role) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *C1ApiIamV1Role) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *C1ApiIamV1Role) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiIamV1Role) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *C1ApiIamV1Role) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *C1ApiIamV1Role) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiIamV1Role) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *C1ApiIamV1Role) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *C1ApiIamV1Role) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiIamV1Role) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *C1ApiIamV1Role) SetName(v string) {
	o.Name = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiIamV1Role) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiIamV1Role) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasPermissions() bool {
	if o != nil && IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *C1ApiIamV1Role) SetPermissions(v []string) {
	o.Permissions = v
}

// GetServiceRoles returns the ServiceRoles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiIamV1Role) GetServiceRoles() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ServiceRoles
}

// GetServiceRolesOk returns a tuple with the ServiceRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiIamV1Role) GetServiceRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.ServiceRoles) {
		return nil, false
	}
	return o.ServiceRoles, true
}

// HasServiceRoles returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasServiceRoles() bool {
	if o != nil && IsNil(o.ServiceRoles) {
		return true
	}

	return false
}

// SetServiceRoles gets a reference to the given []string and assigns it to the ServiceRoles field.
func (o *C1ApiIamV1Role) SetServiceRoles(v []string) {
	o.ServiceRoles = v
}

// GetSystemBuiltin returns the SystemBuiltin field value if set, zero value otherwise.
func (o *C1ApiIamV1Role) GetSystemBuiltin() bool {
	if o == nil || IsNil(o.SystemBuiltin) {
		var ret bool
		return ret
	}
	return *o.SystemBuiltin
}

// GetSystemBuiltinOk returns a tuple with the SystemBuiltin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiIamV1Role) GetSystemBuiltinOk() (*bool, bool) {
	if o == nil || IsNil(o.SystemBuiltin) {
		return nil, false
	}
	return o.SystemBuiltin, true
}

// HasSystemBuiltin returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasSystemBuiltin() bool {
	if o != nil && !IsNil(o.SystemBuiltin) {
		return true
	}

	return false
}

// SetSystemBuiltin gets a reference to the given bool and assigns it to the SystemBuiltin field.
func (o *C1ApiIamV1Role) SetSystemBuiltin(v bool) {
	o.SystemBuiltin = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *C1ApiIamV1Role) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiIamV1Role) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *C1ApiIamV1Role) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *C1ApiIamV1Role) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o C1ApiIamV1Role) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiIamV1Role) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.ServiceRoles != nil {
		toSerialize["serviceRoles"] = o.ServiceRoles
	}
	if !IsNil(o.SystemBuiltin) {
		toSerialize["systemBuiltin"] = o.SystemBuiltin
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiIamV1Role) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiIamV1Role := _C1ApiIamV1Role{}

	if err = json.Unmarshal(bytes, &varC1ApiIamV1Role); err == nil {
		*o = C1ApiIamV1Role(varC1ApiIamV1Role)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "deletedAt")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "permissions")
		delete(additionalProperties, "serviceRoles")
		delete(additionalProperties, "systemBuiltin")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiIamV1Role struct {
	value *C1ApiIamV1Role
	isSet bool
}

func (v NullableC1ApiIamV1Role) Get() *C1ApiIamV1Role {
	return v.value
}

func (v *NullableC1ApiIamV1Role) Set(val *C1ApiIamV1Role) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiIamV1Role) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiIamV1Role) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiIamV1Role(val *C1ApiIamV1Role) *NullableC1ApiIamV1Role {
	return &NullableC1ApiIamV1Role{value: val, isSet: true}
}

func (v NullableC1ApiIamV1Role) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiIamV1Role) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


