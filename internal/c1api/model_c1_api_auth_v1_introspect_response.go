/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiAuthV1IntrospectResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAuthV1IntrospectResponse{}

// C1ApiAuthV1IntrospectResponse The IntrospectResponse message.
type C1ApiAuthV1IntrospectResponse struct {
	// The accessTokenId field.
	AccessTokenId interface{} `json:"accessTokenId,omitempty"`
	// The features field.
	Features interface{} `json:"features,omitempty"`
	// The permissions field.
	Permissions interface{} `json:"permissions,omitempty"`
	// The principleId field.
	PrincipleId interface{} `json:"principleId,omitempty"`
	// The roles field.
	Roles interface{} `json:"roles,omitempty"`
	// The tenantId field.
	TenantId interface{} `json:"tenantId,omitempty"`
	// The userId field.
	UserId interface{} `json:"userId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAuthV1IntrospectResponse C1ApiAuthV1IntrospectResponse

// NewC1ApiAuthV1IntrospectResponse instantiates a new C1ApiAuthV1IntrospectResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAuthV1IntrospectResponse() *C1ApiAuthV1IntrospectResponse {
	this := C1ApiAuthV1IntrospectResponse{}
	return &this
}

// NewC1ApiAuthV1IntrospectResponseWithDefaults instantiates a new C1ApiAuthV1IntrospectResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAuthV1IntrospectResponseWithDefaults() *C1ApiAuthV1IntrospectResponse {
	this := C1ApiAuthV1IntrospectResponse{}
	return &this
}

// GetAccessTokenId returns the AccessTokenId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAuthV1IntrospectResponse) GetAccessTokenId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AccessTokenId
}

// GetAccessTokenIdOk returns a tuple with the AccessTokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAuthV1IntrospectResponse) GetAccessTokenIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AccessTokenId) {
		return nil, false
	}
	return &o.AccessTokenId, true
}

// HasAccessTokenId returns a boolean if a field has been set.
func (o *C1ApiAuthV1IntrospectResponse) HasAccessTokenId() bool {
	if o != nil && IsNil(o.AccessTokenId) {
		return true
	}

	return false
}

// SetAccessTokenId gets a reference to the given interface{} and assigns it to the AccessTokenId field.
func (o *C1ApiAuthV1IntrospectResponse) SetAccessTokenId(v interface{}) {
	o.AccessTokenId = v
}

// GetFeatures returns the Features field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAuthV1IntrospectResponse) GetFeatures() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAuthV1IntrospectResponse) GetFeaturesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return &o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *C1ApiAuthV1IntrospectResponse) HasFeatures() bool {
	if o != nil && IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given interface{} and assigns it to the Features field.
func (o *C1ApiAuthV1IntrospectResponse) SetFeatures(v interface{}) {
	o.Features = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAuthV1IntrospectResponse) GetPermissions() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAuthV1IntrospectResponse) GetPermissionsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return &o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *C1ApiAuthV1IntrospectResponse) HasPermissions() bool {
	if o != nil && IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given interface{} and assigns it to the Permissions field.
func (o *C1ApiAuthV1IntrospectResponse) SetPermissions(v interface{}) {
	o.Permissions = v
}

// GetPrincipleId returns the PrincipleId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAuthV1IntrospectResponse) GetPrincipleId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.PrincipleId
}

// GetPrincipleIdOk returns a tuple with the PrincipleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAuthV1IntrospectResponse) GetPrincipleIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.PrincipleId) {
		return nil, false
	}
	return &o.PrincipleId, true
}

// HasPrincipleId returns a boolean if a field has been set.
func (o *C1ApiAuthV1IntrospectResponse) HasPrincipleId() bool {
	if o != nil && IsNil(o.PrincipleId) {
		return true
	}

	return false
}

// SetPrincipleId gets a reference to the given interface{} and assigns it to the PrincipleId field.
func (o *C1ApiAuthV1IntrospectResponse) SetPrincipleId(v interface{}) {
	o.PrincipleId = v
}

// GetRoles returns the Roles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAuthV1IntrospectResponse) GetRoles() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAuthV1IntrospectResponse) GetRolesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return &o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *C1ApiAuthV1IntrospectResponse) HasRoles() bool {
	if o != nil && IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given interface{} and assigns it to the Roles field.
func (o *C1ApiAuthV1IntrospectResponse) SetRoles(v interface{}) {
	o.Roles = v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAuthV1IntrospectResponse) GetTenantId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAuthV1IntrospectResponse) GetTenantIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return &o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *C1ApiAuthV1IntrospectResponse) HasTenantId() bool {
	if o != nil && IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given interface{} and assigns it to the TenantId field.
func (o *C1ApiAuthV1IntrospectResponse) SetTenantId(v interface{}) {
	o.TenantId = v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAuthV1IntrospectResponse) GetUserId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAuthV1IntrospectResponse) GetUserIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return &o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *C1ApiAuthV1IntrospectResponse) HasUserId() bool {
	if o != nil && IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given interface{} and assigns it to the UserId field.
func (o *C1ApiAuthV1IntrospectResponse) SetUserId(v interface{}) {
	o.UserId = v
}

func (o C1ApiAuthV1IntrospectResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAuthV1IntrospectResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessTokenId != nil {
		toSerialize["accessTokenId"] = o.AccessTokenId
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.PrincipleId != nil {
		toSerialize["principleId"] = o.PrincipleId
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAuthV1IntrospectResponse) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAuthV1IntrospectResponse := _C1ApiAuthV1IntrospectResponse{}

	if err = json.Unmarshal(bytes, &varC1ApiAuthV1IntrospectResponse); err == nil {
		*o = C1ApiAuthV1IntrospectResponse(varC1ApiAuthV1IntrospectResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "accessTokenId")
		delete(additionalProperties, "features")
		delete(additionalProperties, "permissions")
		delete(additionalProperties, "principleId")
		delete(additionalProperties, "roles")
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "userId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAuthV1IntrospectResponse struct {
	value *C1ApiAuthV1IntrospectResponse
	isSet bool
}

func (v NullableC1ApiAuthV1IntrospectResponse) Get() *C1ApiAuthV1IntrospectResponse {
	return v.value
}

func (v *NullableC1ApiAuthV1IntrospectResponse) Set(val *C1ApiAuthV1IntrospectResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAuthV1IntrospectResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAuthV1IntrospectResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAuthV1IntrospectResponse(val *C1ApiAuthV1IntrospectResponse) *NullableC1ApiAuthV1IntrospectResponse {
	return &NullableC1ApiAuthV1IntrospectResponse{value: val, isSet: true}
}

func (v NullableC1ApiAuthV1IntrospectResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAuthV1IntrospectResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


