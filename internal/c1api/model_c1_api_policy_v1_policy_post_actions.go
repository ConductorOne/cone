/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiPolicyV1PolicyPostActions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiPolicyV1PolicyPostActions{}

// C1ApiPolicyV1PolicyPostActions The PolicyPostActions message.  This message contains a oneof named action. Only a single field of the following list may be set at a time:   - certifyRemediateImmediately 
type C1ApiPolicyV1PolicyPostActions struct {
	//  ONLY valid when used in a CERTIFY Ticket Type:  Causes any deprovision or change in a grant to be applied when Certify Ticket is closed.  This field is part of the `action` oneof. See the documentation for `c1.api.policy.v1.PolicyPostActions` for more details.
	CertifyRemediateImmediately NullableBool `json:"certifyRemediateImmediately,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiPolicyV1PolicyPostActions C1ApiPolicyV1PolicyPostActions

// NewC1ApiPolicyV1PolicyPostActions instantiates a new C1ApiPolicyV1PolicyPostActions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiPolicyV1PolicyPostActions() *C1ApiPolicyV1PolicyPostActions {
	this := C1ApiPolicyV1PolicyPostActions{}
	return &this
}

// NewC1ApiPolicyV1PolicyPostActionsWithDefaults instantiates a new C1ApiPolicyV1PolicyPostActions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiPolicyV1PolicyPostActionsWithDefaults() *C1ApiPolicyV1PolicyPostActions {
	this := C1ApiPolicyV1PolicyPostActions{}
	return &this
}

// GetCertifyRemediateImmediately returns the CertifyRemediateImmediately field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiPolicyV1PolicyPostActions) GetCertifyRemediateImmediately() bool {
	if o == nil || IsNil(o.CertifyRemediateImmediately.Get()) {
		var ret bool
		return ret
	}
	return *o.CertifyRemediateImmediately.Get()
}

// GetCertifyRemediateImmediatelyOk returns a tuple with the CertifyRemediateImmediately field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiPolicyV1PolicyPostActions) GetCertifyRemediateImmediatelyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertifyRemediateImmediately.Get(), o.CertifyRemediateImmediately.IsSet()
}

// HasCertifyRemediateImmediately returns a boolean if a field has been set.
func (o *C1ApiPolicyV1PolicyPostActions) HasCertifyRemediateImmediately() bool {
	if o != nil && o.CertifyRemediateImmediately.IsSet() {
		return true
	}

	return false
}

// SetCertifyRemediateImmediately gets a reference to the given NullableBool and assigns it to the CertifyRemediateImmediately field.
func (o *C1ApiPolicyV1PolicyPostActions) SetCertifyRemediateImmediately(v bool) {
	o.CertifyRemediateImmediately.Set(&v)
}
// SetCertifyRemediateImmediatelyNil sets the value for CertifyRemediateImmediately to be an explicit nil
func (o *C1ApiPolicyV1PolicyPostActions) SetCertifyRemediateImmediatelyNil() {
	o.CertifyRemediateImmediately.Set(nil)
}

// UnsetCertifyRemediateImmediately ensures that no value is present for CertifyRemediateImmediately, not even an explicit nil
func (o *C1ApiPolicyV1PolicyPostActions) UnsetCertifyRemediateImmediately() {
	o.CertifyRemediateImmediately.Unset()
}

func (o C1ApiPolicyV1PolicyPostActions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiPolicyV1PolicyPostActions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CertifyRemediateImmediately.IsSet() {
		toSerialize["certifyRemediateImmediately"] = o.CertifyRemediateImmediately.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiPolicyV1PolicyPostActions) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiPolicyV1PolicyPostActions := _C1ApiPolicyV1PolicyPostActions{}

	if err = json.Unmarshal(bytes, &varC1ApiPolicyV1PolicyPostActions); err == nil {
		*o = C1ApiPolicyV1PolicyPostActions(varC1ApiPolicyV1PolicyPostActions)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "certifyRemediateImmediately")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiPolicyV1PolicyPostActions struct {
	value *C1ApiPolicyV1PolicyPostActions
	isSet bool
}

func (v NullableC1ApiPolicyV1PolicyPostActions) Get() *C1ApiPolicyV1PolicyPostActions {
	return v.value
}

func (v *NullableC1ApiPolicyV1PolicyPostActions) Set(val *C1ApiPolicyV1PolicyPostActions) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiPolicyV1PolicyPostActions) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiPolicyV1PolicyPostActions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiPolicyV1PolicyPostActions(val *C1ApiPolicyV1PolicyPostActions) *NullableC1ApiPolicyV1PolicyPostActions {
	return &NullableC1ApiPolicyV1PolicyPostActions{value: val, isSet: true}
}

func (v NullableC1ApiPolicyV1PolicyPostActions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiPolicyV1PolicyPostActions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


