/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse{}

// C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse The GetAppEntitlementUserBindingsForIdentityResponse message.
type C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse struct {
	// The bindings field.
	Bindings []C1ApiAppV1AppEntitlementUserBinding `json:"bindings,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse

// NewC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse instantiates a new C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse() *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse {
	this := C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse{}
	return &this
}

// NewC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponseWithDefaults instantiates a new C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponseWithDefaults() *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse {
	this := C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse{}
	return &this
}

// GetBindings returns the Bindings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) GetBindings() []C1ApiAppV1AppEntitlementUserBinding {
	if o == nil {
		var ret []C1ApiAppV1AppEntitlementUserBinding
		return ret
	}
	return o.Bindings
}

// GetBindingsOk returns a tuple with the Bindings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) GetBindingsOk() ([]C1ApiAppV1AppEntitlementUserBinding, bool) {
	if o == nil || IsNil(o.Bindings) {
		return nil, false
	}
	return o.Bindings, true
}

// HasBindings returns a boolean if a field has been set.
func (o *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) HasBindings() bool {
	if o != nil && IsNil(o.Bindings) {
		return true
	}

	return false
}

// SetBindings gets a reference to the given []C1ApiAppV1AppEntitlementUserBinding and assigns it to the Bindings field.
func (o *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) SetBindings(v []C1ApiAppV1AppEntitlementUserBinding) {
	o.Bindings = v
}

func (o C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Bindings != nil {
		toSerialize["bindings"] = o.Bindings
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse := _C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse{}

	if err = json.Unmarshal(bytes, &varC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse); err == nil {
		*o = C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse(varC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "bindings")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse struct {
	value *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse
	isSet bool
}

func (v NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) Get() *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse {
	return v.value
}

func (v *NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) Set(val *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse(val *C1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) *NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse {
	return &NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse{value: val, isSet: true}
}

func (v NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAppV1GetAppEntitlementUserBindingsForIdentityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


