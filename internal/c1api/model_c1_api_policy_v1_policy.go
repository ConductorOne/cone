/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
	"time"
)

// checks if the C1ApiPolicyV1Policy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiPolicyV1Policy{}

// C1ApiPolicyV1Policy The Policy message.
type C1ApiPolicyV1Policy struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// The description field.
	Description *string `json:"description,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	//  Properties 
	Id *string `json:"id,omitempty"`
	// The policySteps field.
	PolicySteps *map[string]C1ApiPolicyV1PolicySteps `json:"policySteps,omitempty"`
	// The policyType field.
	PolicyType *string `json:"policyType,omitempty"`
	// The postActions field.
	PostActions []C1ApiPolicyV1PolicyPostActions `json:"postActions,omitempty"`
	// The reassignTasksToDelegates field.
	ReassignTasksToDelegates *bool `json:"reassignTasksToDelegates,omitempty"`
	// The systemBuiltin field.
	SystemBuiltin *bool `json:"systemBuiltin,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiPolicyV1Policy C1ApiPolicyV1Policy

// NewC1ApiPolicyV1Policy instantiates a new C1ApiPolicyV1Policy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiPolicyV1Policy() *C1ApiPolicyV1Policy {
	this := C1ApiPolicyV1Policy{}
	return &this
}

// NewC1ApiPolicyV1PolicyWithDefaults instantiates a new C1ApiPolicyV1Policy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiPolicyV1PolicyWithDefaults() *C1ApiPolicyV1Policy {
	this := C1ApiPolicyV1Policy{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *C1ApiPolicyV1Policy) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetDeletedAt() time.Time {
	if o == nil || IsNil(o.DeletedAt) {
		var ret time.Time
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetDeletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasDeletedAt() bool {
	if o != nil && !IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given time.Time and assigns it to the DeletedAt field.
func (o *C1ApiPolicyV1Policy) SetDeletedAt(v time.Time) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *C1ApiPolicyV1Policy) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *C1ApiPolicyV1Policy) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *C1ApiPolicyV1Policy) SetId(v string) {
	o.Id = &v
}

// GetPolicySteps returns the PolicySteps field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetPolicySteps() map[string]C1ApiPolicyV1PolicySteps {
	if o == nil || IsNil(o.PolicySteps) {
		var ret map[string]C1ApiPolicyV1PolicySteps
		return ret
	}
	return *o.PolicySteps
}

// GetPolicyStepsOk returns a tuple with the PolicySteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetPolicyStepsOk() (*map[string]C1ApiPolicyV1PolicySteps, bool) {
	if o == nil || IsNil(o.PolicySteps) {
		return nil, false
	}
	return o.PolicySteps, true
}

// HasPolicySteps returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasPolicySteps() bool {
	if o != nil && !IsNil(o.PolicySteps) {
		return true
	}

	return false
}

// SetPolicySteps gets a reference to the given map[string]C1ApiPolicyV1PolicySteps and assigns it to the PolicySteps field.
func (o *C1ApiPolicyV1Policy) SetPolicySteps(v map[string]C1ApiPolicyV1PolicySteps) {
	o.PolicySteps = &v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetPolicyType() string {
	if o == nil || IsNil(o.PolicyType) {
		var ret string
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetPolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyType) {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasPolicyType() bool {
	if o != nil && !IsNil(o.PolicyType) {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given string and assigns it to the PolicyType field.
func (o *C1ApiPolicyV1Policy) SetPolicyType(v string) {
	o.PolicyType = &v
}

// GetPostActions returns the PostActions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiPolicyV1Policy) GetPostActions() []C1ApiPolicyV1PolicyPostActions {
	if o == nil {
		var ret []C1ApiPolicyV1PolicyPostActions
		return ret
	}
	return o.PostActions
}

// GetPostActionsOk returns a tuple with the PostActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiPolicyV1Policy) GetPostActionsOk() ([]C1ApiPolicyV1PolicyPostActions, bool) {
	if o == nil || IsNil(o.PostActions) {
		return nil, false
	}
	return o.PostActions, true
}

// HasPostActions returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasPostActions() bool {
	if o != nil && IsNil(o.PostActions) {
		return true
	}

	return false
}

// SetPostActions gets a reference to the given []C1ApiPolicyV1PolicyPostActions and assigns it to the PostActions field.
func (o *C1ApiPolicyV1Policy) SetPostActions(v []C1ApiPolicyV1PolicyPostActions) {
	o.PostActions = v
}

// GetReassignTasksToDelegates returns the ReassignTasksToDelegates field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetReassignTasksToDelegates() bool {
	if o == nil || IsNil(o.ReassignTasksToDelegates) {
		var ret bool
		return ret
	}
	return *o.ReassignTasksToDelegates
}

// GetReassignTasksToDelegatesOk returns a tuple with the ReassignTasksToDelegates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetReassignTasksToDelegatesOk() (*bool, bool) {
	if o == nil || IsNil(o.ReassignTasksToDelegates) {
		return nil, false
	}
	return o.ReassignTasksToDelegates, true
}

// HasReassignTasksToDelegates returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasReassignTasksToDelegates() bool {
	if o != nil && !IsNil(o.ReassignTasksToDelegates) {
		return true
	}

	return false
}

// SetReassignTasksToDelegates gets a reference to the given bool and assigns it to the ReassignTasksToDelegates field.
func (o *C1ApiPolicyV1Policy) SetReassignTasksToDelegates(v bool) {
	o.ReassignTasksToDelegates = &v
}

// GetSystemBuiltin returns the SystemBuiltin field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetSystemBuiltin() bool {
	if o == nil || IsNil(o.SystemBuiltin) {
		var ret bool
		return ret
	}
	return *o.SystemBuiltin
}

// GetSystemBuiltinOk returns a tuple with the SystemBuiltin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetSystemBuiltinOk() (*bool, bool) {
	if o == nil || IsNil(o.SystemBuiltin) {
		return nil, false
	}
	return o.SystemBuiltin, true
}

// HasSystemBuiltin returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasSystemBuiltin() bool {
	if o != nil && !IsNil(o.SystemBuiltin) {
		return true
	}

	return false
}

// SetSystemBuiltin gets a reference to the given bool and assigns it to the SystemBuiltin field.
func (o *C1ApiPolicyV1Policy) SetSystemBuiltin(v bool) {
	o.SystemBuiltin = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *C1ApiPolicyV1Policy) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1Policy) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *C1ApiPolicyV1Policy) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *C1ApiPolicyV1Policy) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o C1ApiPolicyV1Policy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiPolicyV1Policy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.DeletedAt) {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PolicySteps) {
		toSerialize["policySteps"] = o.PolicySteps
	}
	if !IsNil(o.PolicyType) {
		toSerialize["policyType"] = o.PolicyType
	}
	if o.PostActions != nil {
		toSerialize["postActions"] = o.PostActions
	}
	if !IsNil(o.ReassignTasksToDelegates) {
		toSerialize["reassignTasksToDelegates"] = o.ReassignTasksToDelegates
	}
	if !IsNil(o.SystemBuiltin) {
		toSerialize["systemBuiltin"] = o.SystemBuiltin
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiPolicyV1Policy) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiPolicyV1Policy := _C1ApiPolicyV1Policy{}

	if err = json.Unmarshal(bytes, &varC1ApiPolicyV1Policy); err == nil {
		*o = C1ApiPolicyV1Policy(varC1ApiPolicyV1Policy)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "deletedAt")
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "id")
		delete(additionalProperties, "policySteps")
		delete(additionalProperties, "policyType")
		delete(additionalProperties, "postActions")
		delete(additionalProperties, "reassignTasksToDelegates")
		delete(additionalProperties, "systemBuiltin")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiPolicyV1Policy struct {
	value *C1ApiPolicyV1Policy
	isSet bool
}

func (v NullableC1ApiPolicyV1Policy) Get() *C1ApiPolicyV1Policy {
	return v.value
}

func (v *NullableC1ApiPolicyV1Policy) Set(val *C1ApiPolicyV1Policy) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiPolicyV1Policy) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiPolicyV1Policy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiPolicyV1Policy(val *C1ApiPolicyV1Policy) *NullableC1ApiPolicyV1Policy {
	return &NullableC1ApiPolicyV1Policy{value: val, isSet: true}
}

func (v NullableC1ApiPolicyV1Policy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiPolicyV1Policy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


