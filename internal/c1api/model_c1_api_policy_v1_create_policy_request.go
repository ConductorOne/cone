/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiPolicyV1CreatePolicyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiPolicyV1CreatePolicyRequest{}

// C1ApiPolicyV1CreatePolicyRequest The CreatePolicyRequest message.
type C1ApiPolicyV1CreatePolicyRequest struct {
	// The description field.
	Description *string `json:"description,omitempty"`
	// The displayName field.
	DisplayName *string `json:"displayName,omitempty"`
	// The policyType field.
	PolicyType *string `json:"policyType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiPolicyV1CreatePolicyRequest C1ApiPolicyV1CreatePolicyRequest

// NewC1ApiPolicyV1CreatePolicyRequest instantiates a new C1ApiPolicyV1CreatePolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiPolicyV1CreatePolicyRequest() *C1ApiPolicyV1CreatePolicyRequest {
	this := C1ApiPolicyV1CreatePolicyRequest{}
	return &this
}

// NewC1ApiPolicyV1CreatePolicyRequestWithDefaults instantiates a new C1ApiPolicyV1CreatePolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiPolicyV1CreatePolicyRequestWithDefaults() *C1ApiPolicyV1CreatePolicyRequest {
	this := C1ApiPolicyV1CreatePolicyRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *C1ApiPolicyV1CreatePolicyRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1CreatePolicyRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *C1ApiPolicyV1CreatePolicyRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *C1ApiPolicyV1CreatePolicyRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *C1ApiPolicyV1CreatePolicyRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1CreatePolicyRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *C1ApiPolicyV1CreatePolicyRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *C1ApiPolicyV1CreatePolicyRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *C1ApiPolicyV1CreatePolicyRequest) GetPolicyType() string {
	if o == nil || IsNil(o.PolicyType) {
		var ret string
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C1ApiPolicyV1CreatePolicyRequest) GetPolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyType) {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *C1ApiPolicyV1CreatePolicyRequest) HasPolicyType() bool {
	if o != nil && !IsNil(o.PolicyType) {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given string and assigns it to the PolicyType field.
func (o *C1ApiPolicyV1CreatePolicyRequest) SetPolicyType(v string) {
	o.PolicyType = &v
}

func (o C1ApiPolicyV1CreatePolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiPolicyV1CreatePolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.PolicyType) {
		toSerialize["policyType"] = o.PolicyType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiPolicyV1CreatePolicyRequest) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiPolicyV1CreatePolicyRequest := _C1ApiPolicyV1CreatePolicyRequest{}

	if err = json.Unmarshal(bytes, &varC1ApiPolicyV1CreatePolicyRequest); err == nil {
		*o = C1ApiPolicyV1CreatePolicyRequest(varC1ApiPolicyV1CreatePolicyRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "policyType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiPolicyV1CreatePolicyRequest struct {
	value *C1ApiPolicyV1CreatePolicyRequest
	isSet bool
}

func (v NullableC1ApiPolicyV1CreatePolicyRequest) Get() *C1ApiPolicyV1CreatePolicyRequest {
	return v.value
}

func (v *NullableC1ApiPolicyV1CreatePolicyRequest) Set(val *C1ApiPolicyV1CreatePolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiPolicyV1CreatePolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiPolicyV1CreatePolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiPolicyV1CreatePolicyRequest(val *C1ApiPolicyV1CreatePolicyRequest) *NullableC1ApiPolicyV1CreatePolicyRequest {
	return &NullableC1ApiPolicyV1CreatePolicyRequest{value: val, isSet: true}
}

func (v NullableC1ApiPolicyV1CreatePolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiPolicyV1CreatePolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


