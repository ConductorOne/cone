/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiPolicyV1PolicySteps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiPolicyV1PolicySteps{}

// C1ApiPolicyV1PolicySteps The PolicySteps message.
type C1ApiPolicyV1PolicySteps struct {
	// The steps field.
	Steps []C1ApiPolicyV1PolicyStep `json:"steps,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiPolicyV1PolicySteps C1ApiPolicyV1PolicySteps

// NewC1ApiPolicyV1PolicySteps instantiates a new C1ApiPolicyV1PolicySteps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiPolicyV1PolicySteps() *C1ApiPolicyV1PolicySteps {
	this := C1ApiPolicyV1PolicySteps{}
	return &this
}

// NewC1ApiPolicyV1PolicyStepsWithDefaults instantiates a new C1ApiPolicyV1PolicySteps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiPolicyV1PolicyStepsWithDefaults() *C1ApiPolicyV1PolicySteps {
	this := C1ApiPolicyV1PolicySteps{}
	return &this
}

// GetSteps returns the Steps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiPolicyV1PolicySteps) GetSteps() []C1ApiPolicyV1PolicyStep {
	if o == nil {
		var ret []C1ApiPolicyV1PolicyStep
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiPolicyV1PolicySteps) GetStepsOk() ([]C1ApiPolicyV1PolicyStep, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *C1ApiPolicyV1PolicySteps) HasSteps() bool {
	if o != nil && IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []C1ApiPolicyV1PolicyStep and assigns it to the Steps field.
func (o *C1ApiPolicyV1PolicySteps) SetSteps(v []C1ApiPolicyV1PolicyStep) {
	o.Steps = v
}

func (o C1ApiPolicyV1PolicySteps) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiPolicyV1PolicySteps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiPolicyV1PolicySteps) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiPolicyV1PolicySteps := _C1ApiPolicyV1PolicySteps{}

	if err = json.Unmarshal(bytes, &varC1ApiPolicyV1PolicySteps); err == nil {
		*o = C1ApiPolicyV1PolicySteps(varC1ApiPolicyV1PolicySteps)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "steps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiPolicyV1PolicySteps struct {
	value *C1ApiPolicyV1PolicySteps
	isSet bool
}

func (v NullableC1ApiPolicyV1PolicySteps) Get() *C1ApiPolicyV1PolicySteps {
	return v.value
}

func (v *NullableC1ApiPolicyV1PolicySteps) Set(val *C1ApiPolicyV1PolicySteps) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiPolicyV1PolicySteps) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiPolicyV1PolicySteps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiPolicyV1PolicySteps(val *C1ApiPolicyV1PolicySteps) *NullableC1ApiPolicyV1PolicySteps {
	return &NullableC1ApiPolicyV1PolicySteps{value: val, isSet: true}
}

func (v NullableC1ApiPolicyV1PolicySteps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiPolicyV1PolicySteps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


