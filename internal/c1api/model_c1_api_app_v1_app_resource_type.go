/*
ConductorOne API

The ConductorOne API is a HTTP API for managing ConductorOne resources.

API version: 0.1.0-alpha
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package c1api

import (
	"encoding/json"
)

// checks if the C1ApiAppV1AppResourceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C1ApiAppV1AppResourceType{}

// C1ApiAppV1AppResourceType The AppResourceType message.
type C1ApiAppV1AppResourceType struct {
	// The appId field.
	AppId interface{} `json:"appId,omitempty"`
	CreatedAt interface{} `json:"createdAt,omitempty"`
	DeletedAt interface{} `json:"deletedAt,omitempty"`
	// The displayName field.
	DisplayName interface{} `json:"displayName,omitempty"`
	// The id field.
	Id interface{} `json:"id,omitempty"`
	UpdatedAt interface{} `json:"updatedAt,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _C1ApiAppV1AppResourceType C1ApiAppV1AppResourceType

// NewC1ApiAppV1AppResourceType instantiates a new C1ApiAppV1AppResourceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC1ApiAppV1AppResourceType() *C1ApiAppV1AppResourceType {
	this := C1ApiAppV1AppResourceType{}
	return &this
}

// NewC1ApiAppV1AppResourceTypeWithDefaults instantiates a new C1ApiAppV1AppResourceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC1ApiAppV1AppResourceTypeWithDefaults() *C1ApiAppV1AppResourceType {
	this := C1ApiAppV1AppResourceType{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1AppResourceType) GetAppId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1AppResourceType) GetAppIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return &o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceType) HasAppId() bool {
	if o != nil && IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given interface{} and assigns it to the AppId field.
func (o *C1ApiAppV1AppResourceType) SetAppId(v interface{}) {
	o.AppId = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1AppResourceType) GetCreatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1AppResourceType) GetCreatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return &o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceType) HasCreatedAt() bool {
	if o != nil && IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given interface{} and assigns it to the CreatedAt field.
func (o *C1ApiAppV1AppResourceType) SetCreatedAt(v interface{}) {
	o.CreatedAt = v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1AppResourceType) GetDeletedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1AppResourceType) GetDeletedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DeletedAt) {
		return nil, false
	}
	return &o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceType) HasDeletedAt() bool {
	if o != nil && IsNil(o.DeletedAt) {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given interface{} and assigns it to the DeletedAt field.
func (o *C1ApiAppV1AppResourceType) SetDeletedAt(v interface{}) {
	o.DeletedAt = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1AppResourceType) GetDisplayName() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1AppResourceType) GetDisplayNameOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return &o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceType) HasDisplayName() bool {
	if o != nil && IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given interface{} and assigns it to the DisplayName field.
func (o *C1ApiAppV1AppResourceType) SetDisplayName(v interface{}) {
	o.DisplayName = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1AppResourceType) GetId() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1AppResourceType) GetIdOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return &o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceType) HasId() bool {
	if o != nil && IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given interface{} and assigns it to the Id field.
func (o *C1ApiAppV1AppResourceType) SetId(v interface{}) {
	o.Id = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *C1ApiAppV1AppResourceType) GetUpdatedAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *C1ApiAppV1AppResourceType) GetUpdatedAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *C1ApiAppV1AppResourceType) HasUpdatedAt() bool {
	if o != nil && IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given interface{} and assigns it to the UpdatedAt field.
func (o *C1ApiAppV1AppResourceType) SetUpdatedAt(v interface{}) {
	o.UpdatedAt = v
}

func (o C1ApiAppV1AppResourceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C1ApiAppV1AppResourceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId != nil {
		toSerialize["appId"] = o.AppId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *C1ApiAppV1AppResourceType) UnmarshalJSON(bytes []byte) (err error) {
	varC1ApiAppV1AppResourceType := _C1ApiAppV1AppResourceType{}

	if err = json.Unmarshal(bytes, &varC1ApiAppV1AppResourceType); err == nil {
		*o = C1ApiAppV1AppResourceType(varC1ApiAppV1AppResourceType)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "appId")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "deletedAt")
		delete(additionalProperties, "displayName")
		delete(additionalProperties, "id")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableC1ApiAppV1AppResourceType struct {
	value *C1ApiAppV1AppResourceType
	isSet bool
}

func (v NullableC1ApiAppV1AppResourceType) Get() *C1ApiAppV1AppResourceType {
	return v.value
}

func (v *NullableC1ApiAppV1AppResourceType) Set(val *C1ApiAppV1AppResourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableC1ApiAppV1AppResourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableC1ApiAppV1AppResourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC1ApiAppV1AppResourceType(val *C1ApiAppV1AppResourceType) *NullableC1ApiAppV1AppResourceType {
	return &NullableC1ApiAppV1AppResourceType{value: val, isSet: true}
}

func (v NullableC1ApiAppV1AppResourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC1ApiAppV1AppResourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


